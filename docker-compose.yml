services:

  php-fpm:
    dns:
      - 8.8.8.8
      - 4.4.4.4
    container_name: php-fpm
    restart: always
    ports:
      - "8000:8000"
    working_dir: /application
    build:
      context: ./docker/php-fpm
    volumes:
      - .:/application
      - ~/.cache/composer:/home/www/.composer/cache

  database:
    container_name: postgres
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-U", "${POSTGRES_USER}" ]
      timeout: 5s
      retries: 5
      start_period: 60s
    ports:
      - "5432:5432"
    volumes:
       - ./docker/postgres/data:/var/lib/postgresql/data:rw

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3.13-management
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    ports:
      - "15672:15672"

#  rr:
#    build:
#      dockerfile: ./docker/php-rr/Dockerfile
#    working_dir: /app
#    ports:
#      - '8080:8080' # шарим порт 9001
#    user: '1000:1000' # работа от текущего юзера в системе
#    volumes:
#      - ./:/app # монтируем проект в /app
